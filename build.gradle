buildscript {
    ext {
        kotlinVersion = '1.3.10'
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-jpa'
apply plugin: 'kotlin-spring'

apply plugin: 'idea'

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'org.kafkatriage'

sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
}

configurations {
    all {
        exclude group: 'junit', module: 'junit'
        exclude module: 'spring-boot-starter-logging'
    }
}

dependencies {
    ext {
        jaxbGlassfishVersion = '2.3.1'
        jUnitVersion = '5.2.0'
        kafkaVersion = '2.0.0'
        log4jVersion = '2.11.2'
        mockitoVersion = '2.23.0'
        mockitoKotlinVersion = '1.6.0'
        springCloudStreamVersion = '2.0.1.RELEASE'
        springKafkaVersion = '2.2.0.RELEASE'
    }

    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'

    implementation 'io.micrometer:micrometer-core'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    implementation "org.apache.kafka:kafka-clients:$kafkaVersion"

    implementation "org.apache.logging.log4j:log4j-api:$log4jVersion"
    implementation "org.apache.logging.log4j:log4j-core:$log4jVersion"
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:$log4jVersion"

    implementation 'org.flywaydb:flyway-core'

    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    implementation "org.springframework:spring-core"
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.springframework.cloud:spring-cloud-stream:$springCloudStreamVersion"

    implementation "org.springframework.kafka:spring-kafka:$springKafkaVersion"

    runtime "org.glassfish.jaxb:jaxb-runtime:$jaxbGlassfishVersion"

    runtime 'com.h2database:h2'

    runtime 'org.postgresql:postgresql'

    // Test
    testImplementation "com.nhaarman:mockito-kotlin:$mockitoKotlinVersion"

    testImplementation "org.apache.kafka:kafka_2.11:$kafkaVersion:test"
    testImplementation "org.apache.kafka:kafka-clients:$kafkaVersion:test"

    testImplementation "org.jetbrains.kotlin:kotlin-test-junit5"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$jUnitVersion"

    testImplementation "org.mockito:mockito-core:$mockitoVersion"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.springframework.kafka:spring-kafka-test:$springKafkaVersion"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$jUnitVersion"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
    }
}

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "failed"
    }
}

bootRun {
    environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: "dev"
}
